# This workflow will install Python dependencies,
# run tests and lint with a variety of Python versions
---
name: Tests
on: [push, pull_request]

jobs:
  cpython:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12', '3.13-dev']

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e ".[tests]"
      - name: Test with pytest, excluding hypothesis tests
        run: >-
          pytest tests
          --cov=tests --cov=pygeoif --cov-report=xml
          --ignore=tests/hypothesis
      - name: "Upload coverage to Codecov"
        if: ${{ matrix.python-version==3.11 }}
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}

  hypothesis-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e ".[tests]"
      - name: Test with pytest including hypothesis tests
        run: |
          pytest tests

  static-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e ".[typing, complexity, linting]"
      - name: Typecheck
        run: |
          mypy pygeoif
      - name: Linting
        run: |
          flake8 pygeoif
          black --check pygeoif tests
          ruff --no-fix pygeoif tests
          yamllint .github/workflows/
      - name: Check complexity
        run: |
          radon cc --min B pygeoif
          radon mi --min B pygeoif
          lizard -l python -w pygeoif

  pypy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pypy-version: ['pypy-3.7', 'pypy-3.8', 'pypy-3.9', 'pypy-3.10']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.pypy-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.pypy-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e ".[tests]"
      - name: Test with pytest, excluding hypothesis tests
        run: |
          pytest tests --ignore=tests/hypothesis

  publish:
    if: "github.event_name == 'push' && github.repository == 'cleder/pygeoif'"
    needs: [cpython, static-tests, pypy, hypothesis-tests]
    name: Build and publish to PyPI and TestPyPI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/
      - name: Publish distribution ðŸ“¦ to Test PyPI for tags
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish distribution ðŸ“¦ to PyPI for push to main
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
...
